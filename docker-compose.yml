version: '3.4'
services:
  web:
    image: nginx:stable-alpine
    container_name: web
    networks:
     - drupal
    volumes:
      - ./conf/nginx.conf:/etc/nginx/conf.d/default.conf
    volumes_from:
     - drupal
    ports:
      - 80:80
  drupal:
    #build:
      # context: .
      # dockerfile: Dockerfile
      # target: development
      # target: production
    image: markaspot/dkan2:latest
    container_name: drupal
    environment:
      CLIENTID : 'dkan2-client-koeln'
      XDEBUG_ENABLED: 0
      DRUPAL_DATABASE_HOST: 'db'
      DRUPAL_DATABASE_PORT: '3306'
      DRUPAL_DATABASE_NAME: 'drupal'
      DRUPAL_DATABASE_USERNAME: 'drupal'
      DRUPAL_DATABASE_PASSWORD: 'drupal'
      DRUPAL_HASH_SALT: 'fe918c992fb1bcfa01f32303c8b21f3d0a0'
      COMPOSER_MEMORY_LIMIT: '-1'
    restart: on-failure
    # Share the project into the container for local development. Comment out
    # this line to test the production-ready pre-built container codebase.
    # volumes: ['.:/app/data:rw,delegated']
    volumes: ['/app/data']
    depends_on:
      - db
    networks:
      - drupal

  db:
    image: mariadb:10
    container_name: db
    environment:
      MYSQL_USER: drupal
      MYSQL_PASSWORD: drupal
      MYSQL_DATABASE: drupal
      MYSQL_ROOT_PASSWORD: ''
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    #restart: on-failure
    ports:
      - "3306:3306"
    volumes:
      - /var/lib/mysql
    networks:
      drupal:
        aliases:
          - db
  phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - 8080:80
    environment:
      - PMA_ARBITRARY=1
    depends_on:
      - db
    networks:
      - drupal
networks:
  drupal:
